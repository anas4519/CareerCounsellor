import 'package:career_counsellor/widgets/info_container.dart';
import 'package:flutter/material.dart';
import 'package:flutter_gemini/flutter_gemini.dart';

class CareerPathway extends StatefulWidget {
  const CareerPathway({
    super.key,
    required this.career,
  });

  final String career;

  @override
  State<CareerPathway> createState() => _CareerPathwayState();
}

class _CareerPathwayState extends State<CareerPathway> {
  final Gemini gemini = Gemini.instance;
  bool isLoading = true;
  String? errorMessage;
  String body = '';

  @override
  void initState() {
    super.initState();
    _generateInitialRecommendations();
  }

  Future<void> _generateInitialRecommendations() async {
    setState(() {
      isLoading = true;
      errorMessage = null;
    });

    String prompt =
        'Point by point career pathway for a student in 12th grade living in India if they want to become a ${widget.career}.';

    try {
      final response = await gemini.text(prompt);

      if (response?.content?.parts?.isNotEmpty == true) {
        setState(() {
          body = response!.content!.parts![0].text ?? '';
          isLoading = false;
        });
      } else {
        throw Exception('Empty response from Gemini');
      }
    } catch (e) {
      setState(() {
        errorMessage = 'Failed to load career information: ${e.toString()}';
        isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final screenHeight = MediaQuery.of(context).size.height;
    return Scaffold(
      appBar: AppBar(
        title: const Text('Career Pathway'),
        centerTitle: true,
      ),
      body: isLoading
          ? const Center(child: CircularProgressIndicator())
          : errorMessage != null
              ? Center(
                  child: Text(
                    errorMessage!,
                    style: const TextStyle(color: Colors.red),
                  ),
                )
              : SingleChildScrollView(
                  padding: EdgeInsets.all(screenWidth * 0.04),
                  child: Column(
                    children: [
                      SelectableText(
                        body,
                        style: const TextStyle(fontSize: 16.0),
                      ),
                      SizedBox(
                        height: screenHeight * 0.03,
                      ),
                      const InfoContainer(
                          text:
                              'This content is generated by AI and may sometimes contain inaccuracies or incomplete information. Please verify independently when necessary.')
                    ],
                  ),
                ),
    );
  }
}
